{{- range $dbType, $dbDetail := $.Values }}
{{- if and (kindIs "map" $dbDetail) (hasKey $dbDetail "enabled") ($dbDetail.enabled) }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "kubernetes-database-backup.fullname" $ }}-{{ $dbType }}
  labels:
    {{- include "kubernetes-database-backup.labels" $ | nindent 4 }}
    database-type: {{ $dbType }}
spec:
  schedule: {{ $dbDetail.schedule | quote }}
  concurrencyPolicy: {{ $.Values.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ $.Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ $.Values.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ include "kubernetes-database-backup.serviceAccountName" $ }}
          containers:
          - name: backup
            image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            command: 
              - "sh"
              - "-c"
              - "/scripts/{{ $dbType }}-backup.sh | tee -a /logs/{{ $dbType }}/{{ $dbType }}_backup_$(date +%F).log;"
            env:
              - name: BUCKET_NAME
                value: {{ $dbDetail.bucketName | quote }}
              - name: S3_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    name: {{ include "kubernetes-database-backup.fullname" $ }}-secret
                    key: S3_ENDPOINT
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ include "kubernetes-database-backup.fullname" $ }}-secret
                    key: AWS_ACCESS_KEY_ID
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ include "kubernetes-database-backup.fullname" $ }}-secret
                    key: AWS_SECRET_ACCESS_KEY
            volumeMounts:
            - name: backup-storage
              mountPath: /backups/{{ $dbType }}
              subPath: backups/{{ $dbType }}
            - name: backup-storage
              mountPath: /logs/{{ $dbType }}
              subPath: logs/{{ $dbType }}
            - name: backup-configs
              mountPath: /configs
              readOnly: true
            resources:
              {{- toYaml $.Values.resources | nindent 14 }}
          securityContext:
            runAsUser: 0
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: {{ include "kubernetes-database-backup.fullname" $ }}-{{ $dbType }}-storage
          - name: backup-configs
            configMap:
              name: {{ include "kubernetes-database-backup.fullname" $ }}-configs
          restartPolicy: OnFailure
          {{- with $.Values.image.pullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}
{{- end }}
{{- end }}